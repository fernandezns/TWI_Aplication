
TWI_Aplication.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000067e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000060a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800100  00800100  0000067e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000067e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  000006f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e62  00000000  00000000  00000770  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000779  00000000  00000000  000015d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000842  00000000  00000000  00001d4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000100  00000000  00000000  00002590  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000496  00000000  00000000  00002690  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000163  00000000  00000000  00002b26  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00002c89  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__ctors_end>
   4:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
   8:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
   c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  10:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  14:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  18:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  1c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  20:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  24:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  28:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  2c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  30:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  34:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  38:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  3c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  40:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  44:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  48:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  4c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  50:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  54:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  58:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  5c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__vector_24>
  64:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
  68:	af 00       	.word	0x00af	; ????
  6a:	b9 00       	.word	0x00b9	; ????
  6c:	c3 00       	.word	0x00c3	; ????
  6e:	cd 00       	.word	0x00cd	; ????
  70:	d7 00       	.word	0x00d7	; ????
  72:	e1 00       	.word	0x00e1	; ????
  74:	eb 00       	.word	0x00eb	; ????
  76:	f5 00       	.word	0x00f5	; ????
  78:	ff 00       	.word	0x00ff	; ????
  7a:	09 01       	movw	r0, r18
  7c:	13 01       	movw	r2, r6
  7e:	1d 01       	movw	r2, r26
  80:	27 01       	movw	r4, r14
  82:	31 01       	movw	r6, r2
  84:	3b 01       	movw	r6, r22
  86:	45 01       	movw	r8, r10
  88:	4f 01       	movw	r8, r30
  8a:	59 01       	movw	r10, r18
  8c:	63 01       	movw	r12, r6
  8e:	6d 01       	movw	r12, r26
  90:	77 01       	movw	r14, r14
  92:	81 01       	movw	r16, r2
  94:	8b 01       	movw	r16, r22
  96:	95 01       	movw	r18, r10
  98:	9f 01       	movw	r18, r30
  9a:	a9 01       	movw	r20, r18
  9c:	b3 01       	movw	r22, r6
  9e:	bd 01       	movw	r22, r26
  a0:	7a 02       	muls	r23, r26
  a2:	86 02       	muls	r24, r22
  a4:	92 02       	muls	r25, r18
  a6:	9e 02       	muls	r25, r30
  a8:	a9 02       	muls	r26, r25
  aa:	b4 02       	muls	r27, r20
  ac:	bf 02       	muls	r27, r31
  ae:	ca 02       	muls	r28, r26

000000b0 <__ctors_end>:
  b0:	11 24       	eor	r1, r1
  b2:	1f be       	out	0x3f, r1	; 63
  b4:	cf ef       	ldi	r28, 0xFF	; 255
  b6:	d8 e0       	ldi	r29, 0x08	; 8
  b8:	de bf       	out	0x3e, r29	; 62
  ba:	cd bf       	out	0x3d, r28	; 61

000000bc <__do_clear_bss>:
  bc:	21 e0       	ldi	r18, 0x01	; 1
  be:	a0 e0       	ldi	r26, 0x00	; 0
  c0:	b1 e0       	ldi	r27, 0x01	; 1
  c2:	01 c0       	rjmp	.+2      	; 0xc6 <.do_clear_bss_start>

000000c4 <.do_clear_bss_loop>:
  c4:	1d 92       	st	X+, r1

000000c6 <.do_clear_bss_start>:
  c6:	a7 30       	cpi	r26, 0x07	; 7
  c8:	b2 07       	cpc	r27, r18
  ca:	e1 f7       	brne	.-8      	; 0xc4 <.do_clear_bss_loop>
  cc:	0e 94 da 02 	call	0x5b4	; 0x5b4 <main>
  d0:	0c 94 03 03 	jmp	0x606	; 0x606 <_exit>

000000d4 <__bad_interrupt>:
  d4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d8 <__vector_24>:
			twi_Status=1;
			writeDisplay();
			if(comando==LAST_COMAND_RECEIVED){
				disply1306StopTWI(ATMEGA328P);
				comando=0;
				tarea++;
  d8:	1f 92       	push	r1
  da:	0f 92       	push	r0
  dc:	0f b6       	in	r0, 0x3f	; 63
  de:	0f 92       	push	r0
  e0:	11 24       	eor	r1, r1
  e2:	8f 93       	push	r24
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <flagInterrup>
  ea:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
  ee:	88 7f       	andi	r24, 0xF8	; 248
  f0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <twi_Status>
  f4:	8f 91       	pop	r24
  f6:	0f 90       	pop	r0
  f8:	0f be       	out	0x3f, r0	; 63
  fa:	0f 90       	pop	r0
  fc:	1f 90       	pop	r1
  fe:	18 95       	reti

00000100 <initPorts>:
 100:	80 e2       	ldi	r24, 0x20	; 32
 102:	84 b9       	out	0x04, r24	; 4
 104:	08 95       	ret

00000106 <disply1306InitTWI>:
 106:	80 ff       	sbrs	r24, 0
 108:	0b c0       	rjmp	.+22     	; 0x120 <disply1306InitTWI+0x1a>
 10a:	88 e4       	ldi	r24, 0x48	; 72
 10c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
 110:	e9 eb       	ldi	r30, 0xB9	; 185
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	80 81       	ld	r24, Z
 116:	8c 7f       	andi	r24, 0xFC	; 252
 118:	80 83       	st	Z, r24
 11a:	85 ea       	ldi	r24, 0xA5	; 165
 11c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 120:	08 95       	ret

00000122 <disply1306SlaveAddrsTWI>:
 122:	80 ff       	sbrs	r24, 0
 124:	06 c0       	rjmp	.+12     	; 0x132 <disply1306SlaveAddrsTWI+0x10>
 126:	88 e7       	ldi	r24, 0x78	; 120
 128:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 12c:	85 e8       	ldi	r24, 0x85	; 133
 12e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 132:	08 95       	ret

00000134 <disply1306Data>:
 134:	80 ff       	sbrs	r24, 0
 136:	05 c0       	rjmp	.+10     	; 0x142 <disply1306Data+0xe>
 138:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 13c:	85 e8       	ldi	r24, 0x85	; 133
 13e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 142:	08 95       	ret

00000144 <disply1306Settings>:
 144:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <comando>
 148:	8e 2f       	mov	r24, r30
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	8c 31       	cpi	r24, 0x1C	; 28
 14e:	91 05       	cpc	r25, r1
 150:	08 f0       	brcs	.+2      	; 0x154 <disply1306Settings+0x10>
 152:	16 c1       	rjmp	.+556    	; 0x380 <disply1306Settings+0x23c>
 154:	fc 01       	movw	r30, r24
 156:	ec 5c       	subi	r30, 0xCC	; 204
 158:	ff 4f       	sbci	r31, 0xFF	; 255
 15a:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__tablejump2__>
 15e:	60 e0       	ldi	r22, 0x00	; 0
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 166:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 16a:	8f 5f       	subi	r24, 0xFF	; 255
 16c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 170:	08 95       	ret
 172:	6e ea       	ldi	r22, 0xAE	; 174
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 17a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 17e:	8f 5f       	subi	r24, 0xFF	; 255
 180:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 184:	08 95       	ret
 186:	65 ed       	ldi	r22, 0xD5	; 213
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 18e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 192:	8f 5f       	subi	r24, 0xFF	; 255
 194:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 198:	08 95       	ret
 19a:	60 e8       	ldi	r22, 0x80	; 128
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 1a2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 1a6:	8f 5f       	subi	r24, 0xFF	; 255
 1a8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 1ac:	08 95       	ret
 1ae:	68 ea       	ldi	r22, 0xA8	; 168
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 1b6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 1ba:	8f 5f       	subi	r24, 0xFF	; 255
 1bc:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 1c0:	08 95       	ret
 1c2:	6f e3       	ldi	r22, 0x3F	; 63
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 1ca:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 1ce:	8f 5f       	subi	r24, 0xFF	; 255
 1d0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 1d4:	08 95       	ret
 1d6:	63 ed       	ldi	r22, 0xD3	; 211
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 1de:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 1e2:	8f 5f       	subi	r24, 0xFF	; 255
 1e4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 1e8:	08 95       	ret
 1ea:	60 e0       	ldi	r22, 0x00	; 0
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 1f2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 1f6:	8f 5f       	subi	r24, 0xFF	; 255
 1f8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 1fc:	08 95       	ret
 1fe:	60 e4       	ldi	r22, 0x40	; 64
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 206:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 20a:	8f 5f       	subi	r24, 0xFF	; 255
 20c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 210:	08 95       	ret
 212:	6d e8       	ldi	r22, 0x8D	; 141
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 21a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 21e:	8f 5f       	subi	r24, 0xFF	; 255
 220:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 224:	08 95       	ret
 226:	64 e1       	ldi	r22, 0x14	; 20
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 22e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 232:	8f 5f       	subi	r24, 0xFF	; 255
 234:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 238:	08 95       	ret
 23a:	61 ea       	ldi	r22, 0xA1	; 161
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 242:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 246:	8f 5f       	subi	r24, 0xFF	; 255
 248:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 24c:	08 95       	ret
 24e:	68 ec       	ldi	r22, 0xC8	; 200
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 256:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 25a:	8f 5f       	subi	r24, 0xFF	; 255
 25c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 260:	08 95       	ret
 262:	6a ed       	ldi	r22, 0xDA	; 218
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 26a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 26e:	8f 5f       	subi	r24, 0xFF	; 255
 270:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 274:	08 95       	ret
 276:	62 e1       	ldi	r22, 0x12	; 18
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 27e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 282:	8f 5f       	subi	r24, 0xFF	; 255
 284:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 288:	08 95       	ret
 28a:	61 e8       	ldi	r22, 0x81	; 129
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 292:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 296:	8f 5f       	subi	r24, 0xFF	; 255
 298:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 29c:	08 95       	ret
 29e:	6f e9       	ldi	r22, 0x9F	; 159
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 2a6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 2aa:	8f 5f       	subi	r24, 0xFF	; 255
 2ac:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 2b0:	08 95       	ret
 2b2:	60 e2       	ldi	r22, 0x20	; 32
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 2ba:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 2be:	8f 5f       	subi	r24, 0xFF	; 255
 2c0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 2c4:	08 95       	ret
 2c6:	62 e0       	ldi	r22, 0x02	; 2
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 2ce:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 2d2:	8f 5f       	subi	r24, 0xFF	; 255
 2d4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 2d8:	08 95       	ret
 2da:	6e e2       	ldi	r22, 0x2E	; 46
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 2e2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 2e6:	8f 5f       	subi	r24, 0xFF	; 255
 2e8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 2ec:	08 95       	ret
 2ee:	69 ed       	ldi	r22, 0xD9	; 217
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 2f6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 2fa:	8f 5f       	subi	r24, 0xFF	; 255
 2fc:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 300:	08 95       	ret
 302:	62 e2       	ldi	r22, 0x22	; 34
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 30a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 30e:	8f 5f       	subi	r24, 0xFF	; 255
 310:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 314:	08 95       	ret
 316:	6b ed       	ldi	r22, 0xDB	; 219
 318:	81 e0       	ldi	r24, 0x01	; 1
 31a:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 31e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 322:	8f 5f       	subi	r24, 0xFF	; 255
 324:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 328:	08 95       	ret
 32a:	60 e4       	ldi	r22, 0x40	; 64
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 332:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 336:	8f 5f       	subi	r24, 0xFF	; 255
 338:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 33c:	08 95       	ret
 33e:	64 ea       	ldi	r22, 0xA4	; 164
 340:	81 e0       	ldi	r24, 0x01	; 1
 342:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 346:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 34a:	8f 5f       	subi	r24, 0xFF	; 255
 34c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 350:	08 95       	ret
 352:	67 ea       	ldi	r22, 0xA7	; 167
 354:	81 e0       	ldi	r24, 0x01	; 1
 356:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 35a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 35e:	8f 5f       	subi	r24, 0xFF	; 255
 360:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 364:	08 95       	ret
 366:	6f ea       	ldi	r22, 0xAF	; 175
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
 36e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 372:	8f 5f       	subi	r24, 0xFF	; 255
 374:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 378:	08 95       	ret
 37a:	80 ef       	ldi	r24, 0xF0	; 240
 37c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
 380:	08 95       	ret

00000382 <disply1306StopTWI>:
 382:	80 ff       	sbrs	r24, 0
 384:	03 c0       	rjmp	.+6      	; 0x38c <disply1306StopTWI+0xa>
 386:	84 e9       	ldi	r24, 0x94	; 148
 388:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 38c:	08 95       	ret

0000038e <disply1306DefaultInit>:
 38e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <twi_Status>
 392:	88 30       	cpi	r24, 0x08	; 8
 394:	79 f0       	breq	.+30     	; 0x3b4 <disply1306DefaultInit+0x26>
 396:	18 f4       	brcc	.+6      	; 0x39e <disply1306DefaultInit+0x10>
 398:	88 23       	and	r24, r24
 39a:	31 f0       	breq	.+12     	; 0x3a8 <disply1306DefaultInit+0x1a>
 39c:	08 95       	ret
 39e:	88 31       	cpi	r24, 0x18	; 24
 3a0:	79 f0       	breq	.+30     	; 0x3c0 <disply1306DefaultInit+0x32>
 3a2:	88 32       	cpi	r24, 0x28	; 40
 3a4:	69 f0       	breq	.+26     	; 0x3c0 <disply1306DefaultInit+0x32>
 3a6:	08 95       	ret
 3a8:	81 e0       	ldi	r24, 0x01	; 1
 3aa:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <twi_Status>
 3ae:	0e 94 83 00 	call	0x106	; 0x106 <disply1306InitTWI>
 3b2:	08 95       	ret
 3b4:	81 e0       	ldi	r24, 0x01	; 1
 3b6:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <twi_Status>
 3ba:	0e 94 91 00 	call	0x122	; 0x122 <disply1306SlaveAddrsTWI>
 3be:	08 95       	ret
 3c0:	81 e0       	ldi	r24, 0x01	; 1
 3c2:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <twi_Status>
 3c6:	0e 94 a2 00 	call	0x144	; 0x144 <disply1306Settings>
 3ca:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 3ce:	80 3f       	cpi	r24, 0xF0	; 240
 3d0:	79 f4       	brne	.+30     	; 0x3f0 <disply1306DefaultInit+0x62>
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	0e 94 c1 01 	call	0x382	; 0x382 <disply1306StopTWI>
 3d8:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <comando>
 3dc:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <tarea>
 3e0:	8f 5f       	subi	r24, 0xFF	; 255
 3e2:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <tarea>
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <flagInterrup>
 3ec:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <twi_Status>
 3f0:	08 95       	ret

000003f2 <cleanPage>:
			}
			break;
	}
}

uint8_t cleanPage(uint8_t page){
 3f2:	cf 93       	push	r28
 3f4:	df 93       	push	r29
 3f6:	d8 2f       	mov	r29, r24
	static uint8_t clean=0,i=0;
	switch(twi_Status){
 3f8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <twi_Status>
 3fc:	88 30       	cpi	r24, 0x08	; 8
 3fe:	79 f0       	breq	.+30     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 400:	18 f4       	brcc	.+6      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 402:	88 23       	and	r24, r24
 404:	31 f0       	breq	.+12     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 406:	16 c0       	rjmp	.+44     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 408:	88 31       	cpi	r24, 0x18	; 24
 40a:	79 f0       	breq	.+30     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 40c:	88 32       	cpi	r24, 0x28	; 40
 40e:	69 f0       	breq	.+26     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 410:	11 c0       	rjmp	.+34     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
		case 0:
			twi_Status=1;
 412:	81 e0       	ldi	r24, 0x01	; 1
 414:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <twi_Status>
			disply1306InitTWI(ATMEGA328P);
 418:	0e 94 83 00 	call	0x106	; 0x106 <disply1306InitTWI>
			break;
 41c:	0b c0       	rjmp	.+22     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
		case TWI_STARTED:
			twi_Status=1;
 41e:	81 e0       	ldi	r24, 0x01	; 1
 420:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <twi_Status>
			disply1306SlaveAddrsTWI(ATMEGA328P);
 424:	0e 94 91 00 	call	0x122	; 0x122 <disply1306SlaveAddrsTWI>
			break;
 428:	05 c0       	rjmp	.+10     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
		case SLA_W_SENT: case DATA_RECEIVED: 
			twi_Status=1;
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <twi_Status>
			clean=1;
 430:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <clean.1811>
			break;
	}
	if(clean){
 434:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <clean.1811>
 438:	cc 23       	and	r28, r28
 43a:	09 f4       	brne	.+2      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 43c:	4a c0       	rjmp	.+148    	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
		clean=0;
 43e:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <clean.1811>
		switch(comando){
 442:	c0 91 04 01 	lds	r28, 0x0104	; 0x800104 <comando>
 446:	c1 30       	cpi	r28, 0x01	; 1
 448:	81 f0       	breq	.+32     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 44a:	28 f0       	brcs	.+10     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 44c:	c2 30       	cpi	r28, 0x02	; 2
 44e:	c1 f0       	breq	.+48     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 450:	c3 30       	cpi	r28, 0x03	; 3
 452:	09 f1       	breq	.+66     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 454:	3d c0       	rjmp	.+122    	; 0x4d0 <__EEPROM_REGION_LENGTH__+0xd0>
			case 0:
				disply1306Data(ATMEGA328P,0x80);
 456:	60 e8       	ldi	r22, 0x80	; 128
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
				comando++;
 45e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 462:	8f 5f       	subi	r24, 0xFF	; 255
 464:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
				break;	
 468:	34 c0       	rjmp	.+104    	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
			case 1:
				disply1306Data(ATMEGA328P,page);
 46a:	6d 2f       	mov	r22, r29
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
				comando++;
 472:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 476:	8f 5f       	subi	r24, 0xFF	; 255
 478:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
					return 1;
				}
				break;
		}
	}
	return 0;
 47c:	c0 e0       	ldi	r28, 0x00	; 0
				comando++;
				break;	
			case 1:
				disply1306Data(ATMEGA328P,page);
				comando++;
				break;
 47e:	29 c0       	rjmp	.+82     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
			case 2:
				disply1306Data(ATMEGA328P,0x40);
 480:	60 e4       	ldi	r22, 0x40	; 64
 482:	81 e0       	ldi	r24, 0x01	; 1
 484:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
				comando++;
 488:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <comando>
 48c:	8f 5f       	subi	r24, 0xFF	; 255
 48e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <comando>
					return 1;
				}
				break;
		}
	}
	return 0;
 492:	c0 e0       	ldi	r28, 0x00	; 0
				comando++;
				break;
			case 2:
				disply1306Data(ATMEGA328P,0x40);
				comando++;
				break;
 494:	1e c0       	rjmp	.+60     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
			case 3:
				if(i<128){
 496:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <i.1812>
 49a:	88 23       	and	r24, r24
 49c:	5c f0       	brlt	.+22     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
					disply1306Data(ATMEGA328P,0x00);
 49e:	60 e0       	ldi	r22, 0x00	; 0
 4a0:	81 e0       	ldi	r24, 0x01	; 1
 4a2:	0e 94 9a 00 	call	0x134	; 0x134 <disply1306Data>
					i++;
 4a6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <i.1812>
 4aa:	8f 5f       	subi	r24, 0xFF	; 255
 4ac:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <i.1812>
					return 1;
				}
				break;
		}
	}
	return 0;
 4b0:	c0 e0       	ldi	r28, 0x00	; 0
					comando=0;
					twi_Status=0;
					flagInterrup=1;
					return 1;
				}
				break;
 4b2:	0f c0       	rjmp	.+30     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
				if(i<128){
					disply1306Data(ATMEGA328P,0x00);
					i++;
				}
				else{
					i=0;
 4b4:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <i.1812>
					disply1306StopTWI(ATMEGA328P);
 4b8:	81 e0       	ldi	r24, 0x01	; 1
 4ba:	0e 94 c1 01 	call	0x382	; 0x382 <disply1306StopTWI>
					comando=0;
 4be:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <comando>
					twi_Status=0;
 4c2:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <twi_Status>
					flagInterrup=1;
 4c6:	81 e0       	ldi	r24, 0x01	; 1
 4c8:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <flagInterrup>
					return 1;
 4cc:	c1 e0       	ldi	r28, 0x01	; 1
 4ce:	01 c0       	rjmp	.+2      	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
				}
				break;
		}
	}
	return 0;
 4d0:	c0 e0       	ldi	r28, 0x00	; 0
}
 4d2:	8c 2f       	mov	r24, r28
 4d4:	df 91       	pop	r29
 4d6:	cf 91       	pop	r28
 4d8:	08 95       	ret

000004da <cleanAllDisplay>:

void cleanAllDisplay(){
	static uint8_t page=0;
	switch(page){
 4da:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 4de:	8e 2f       	mov	r24, r30
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	88 30       	cpi	r24, 0x08	; 8
 4e4:	91 05       	cpc	r25, r1
 4e6:	08 f0       	brcs	.+2      	; 0x4ea <cleanAllDisplay+0x10>
 4e8:	64 c0       	rjmp	.+200    	; 0x5b2 <cleanAllDisplay+0xd8>
 4ea:	fc 01       	movw	r30, r24
 4ec:	e0 5b       	subi	r30, 0xB0	; 176
 4ee:	ff 4f       	sbci	r31, 0xFF	; 255
 4f0:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__tablejump2__>
		case 0:
			if(cleanPage(0xB0))
 4f4:	80 eb       	ldi	r24, 0xB0	; 176
 4f6:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <cleanPage>
 4fa:	88 23       	and	r24, r24
 4fc:	09 f4       	brne	.+2      	; 0x500 <cleanAllDisplay+0x26>
 4fe:	59 c0       	rjmp	.+178    	; 0x5b2 <cleanAllDisplay+0xd8>
				page++;
 500:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 504:	8f 5f       	subi	r24, 0xFF	; 255
 506:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 50a:	08 95       	ret
			break;
		case 1:
			if(cleanPage(0xB1))
 50c:	81 eb       	ldi	r24, 0xB1	; 177
 50e:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <cleanPage>
 512:	88 23       	and	r24, r24
 514:	09 f4       	brne	.+2      	; 0x518 <cleanAllDisplay+0x3e>
 516:	4d c0       	rjmp	.+154    	; 0x5b2 <cleanAllDisplay+0xd8>
				page++;
 518:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 51c:	8f 5f       	subi	r24, 0xFF	; 255
 51e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 522:	08 95       	ret
			break;
		case 2:
			if(cleanPage(0xB2))
 524:	82 eb       	ldi	r24, 0xB2	; 178
 526:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <cleanPage>
 52a:	88 23       	and	r24, r24
 52c:	09 f4       	brne	.+2      	; 0x530 <cleanAllDisplay+0x56>
 52e:	41 c0       	rjmp	.+130    	; 0x5b2 <cleanAllDisplay+0xd8>
				page++;
 530:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 534:	8f 5f       	subi	r24, 0xFF	; 255
 536:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 53a:	08 95       	ret
			break;
		case 3:
			if(cleanPage(0xB3))
 53c:	83 eb       	ldi	r24, 0xB3	; 179
 53e:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <cleanPage>
 542:	88 23       	and	r24, r24
 544:	b1 f1       	breq	.+108    	; 0x5b2 <cleanAllDisplay+0xd8>
				page++;
 546:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 54a:	8f 5f       	subi	r24, 0xFF	; 255
 54c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 550:	08 95       	ret
			break;
		case 4:
			if(cleanPage(0xB4))
 552:	84 eb       	ldi	r24, 0xB4	; 180
 554:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <cleanPage>
 558:	88 23       	and	r24, r24
 55a:	59 f1       	breq	.+86     	; 0x5b2 <cleanAllDisplay+0xd8>
				page++;
 55c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 560:	8f 5f       	subi	r24, 0xFF	; 255
 562:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 566:	08 95       	ret
			break;
		case 5:
			if(cleanPage(0xB5))
 568:	85 eb       	ldi	r24, 0xB5	; 181
 56a:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <cleanPage>
 56e:	88 23       	and	r24, r24
 570:	01 f1       	breq	.+64     	; 0x5b2 <cleanAllDisplay+0xd8>
				page++;
 572:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 576:	8f 5f       	subi	r24, 0xFF	; 255
 578:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 57c:	08 95       	ret
			break;	
		case 6:
			if(cleanPage(0xB6))
 57e:	86 eb       	ldi	r24, 0xB6	; 182
 580:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <cleanPage>
 584:	88 23       	and	r24, r24
 586:	a9 f0       	breq	.+42     	; 0x5b2 <cleanAllDisplay+0xd8>
				page++;
 588:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 58c:	8f 5f       	subi	r24, 0xFF	; 255
 58e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 592:	08 95       	ret
			break;
		case 7:
			if(cleanPage(0xB7)){
 594:	87 eb       	ldi	r24, 0xB7	; 183
 596:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <cleanPage>
 59a:	88 23       	and	r24, r24
 59c:	51 f0       	breq	.+20     	; 0x5b2 <cleanAllDisplay+0xd8>
				tarea++;
 59e:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <tarea>
 5a2:	8f 5f       	subi	r24, 0xFF	; 255
 5a4:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <tarea>
				page=0;
 5a8:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
				flagInterrup=1;
 5ac:	81 e0       	ldi	r24, 0x01	; 1
 5ae:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <flagInterrup>
 5b2:	08 95       	ret

000005b4 <main>:



int main(void)
{
	cli();
 5b4:	f8 94       	cli
	initPorts();
 5b6:	0e 94 80 00 	call	0x100	; 0x100 <initPorts>
	sei();
 5ba:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5bc:	2f ef       	ldi	r18, 0xFF	; 255
 5be:	83 ed       	ldi	r24, 0xD3	; 211
 5c0:	90 e3       	ldi	r25, 0x30	; 48
 5c2:	21 50       	subi	r18, 0x01	; 1
 5c4:	80 40       	sbci	r24, 0x00	; 0
 5c6:	90 40       	sbci	r25, 0x00	; 0
 5c8:	e1 f7       	brne	.-8      	; 0x5c2 <main+0xe>
 5ca:	00 c0       	rjmp	.+0      	; 0x5cc <main+0x18>
 5cc:	00 00       	nop
	_delay_ms(1000);
	flagInterrup=1;
 5ce:	81 e0       	ldi	r24, 0x01	; 1
 5d0:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <flagInterrup>
    while (1) 
    {
		if(flagInterrup){
 5d4:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <flagInterrup>
 5d8:	88 23       	and	r24, r24
 5da:	e1 f3       	breq	.-8      	; 0x5d4 <main+0x20>
			flagInterrup=0;
 5dc:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <flagInterrup>
			switch(tarea){
 5e0:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <tarea>
 5e4:	88 23       	and	r24, r24
 5e6:	19 f0       	breq	.+6      	; 0x5ee <main+0x3a>
 5e8:	81 30       	cpi	r24, 0x01	; 1
 5ea:	21 f0       	breq	.+8      	; 0x5f4 <main+0x40>
 5ec:	f3 cf       	rjmp	.-26     	; 0x5d4 <main+0x20>
				case 0:
					disply1306DefaultInit();
 5ee:	0e 94 c7 01 	call	0x38e	; 0x38e <disply1306DefaultInit>
					break;
 5f2:	f0 cf       	rjmp	.-32     	; 0x5d4 <main+0x20>
				case 1:
					cleanAllDisplay();
 5f4:	0e 94 6d 02 	call	0x4da	; 0x4da <cleanAllDisplay>
					break;
 5f8:	ed cf       	rjmp	.-38     	; 0x5d4 <main+0x20>

000005fa <__tablejump2__>:
 5fa:	ee 0f       	add	r30, r30
 5fc:	ff 1f       	adc	r31, r31
 5fe:	05 90       	lpm	r0, Z+
 600:	f4 91       	lpm	r31, Z
 602:	e0 2d       	mov	r30, r0
 604:	09 94       	ijmp

00000606 <_exit>:
 606:	f8 94       	cli

00000608 <__stop_program>:
 608:	ff cf       	rjmp	.-2      	; 0x608 <__stop_program>
